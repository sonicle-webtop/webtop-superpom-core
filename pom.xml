<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sonicle.webtop</groupId>
	<artifactId>webtop-superpom-core</artifactId>
	<version>8</version>
	<packaging>pom</packaging>
	
	<parent>
		<groupId>com.sonicle.webtop</groupId>
		<artifactId>webtop-superpom</artifactId>
		<version>6</version>
	</parent>
	
	<properties>
		<!-- SENCHA -->
		<!--
			Defines the target properties file to load
		-->
		<sencha.properties.target>sencha</sencha.properties.target>
		
		<!-- SENCHA: integration (loaded from properties file at "{sencha.properties.target}.properties") -->
		<!--
			Sencha CMD path in which to find CMD executable (loaded from target properties file)
		<sencha.cmd></sencha.cmd> or deprecated <sencha.cmd.v6></sencha.cmd.v6>
		
			Path of the workspace (loaded from target properties file)
		<sencha.workspace></sencha.workspace>
		-->
		<!-- SENCHA: integration (taken from cmd-line) -->
		<!--
			Custom cmd-line arguments to append to Sencha executable
		<sencha.cmd.exec.args></sencha.cmd.exec.args>
		-->
		
		<!-- WEBTOP: service configuration -->
		<webtop.service.package>com.sonicle.webtop.core</webtop.service.package>
		<webtop.service.jsPackage>Sonicle.webtop.core</webtop.service.jsPackage>
		
		<!-- WEBTOP: service configuration (loaded from "${user.home}/.m2/${artifactId}.properties") -->
		<!--
			JDBC Driver to use in JOOQ configuration
		<webtop.service.db.jdbc.driver></webtop.service.db.jdbc.driver>
		
			JDBC Driver to use in JOOQ configuration
		<webtop.service.db.jdbc.url></webtop.service.db.jdbc.url>
		
			JDBC Driver to use in JOOQ configuration
		<webtop.service.db.jdbc.user></webtop.service.db.jdbc.user>
		
			JDBC Driver to use in JOOQ configuration
		<webtop.service.db.jdbc.password></webtop.service.db.jdbc.password>
		
			DB Schema to use in JOOQ configuration
		<webtop.service.db.schema></webtop.service.db.schema>
		-->
	</properties>
	
	<dependencies>
		<!-- container libraries -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax-servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>${javax-websocket-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- 3rd party libraries -->
		<dependency>
			<!-- Codegen was not able to generate classes with new annotations package (io.swagger.core.v3), so use old version for now! -->
			<groupId>io.swagger</groupId>
			<!--<groupId>io.swagger.core.v3</groupId>-->
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
				<executions>
					<execution>
						<id>clean-gen-swagger</id>
						<phase>none</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/gen/swagger</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>		
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${properties-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>read-sencha-properties</id>
						<phase>none</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${user.home}/.m2/${sencha.properties.target}.properties</file>
							</files>
						</configuration>
					</execution>
					<execution>
						<id>read-artifact-properties</id>
						<phase>none</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${user.home}/.m2/${project.artifactId}.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!--<source>src/gen/jooq</source>-->
								<source>src/gen/swagger</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>build-properties</id>
						<phase>none</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<taskdef resource="net/sf/antcontrib/antlib.xml" />
								<echo>Evaluating deprecated properties</echo>
								<script language="javascript">
								<![CDATA[
									var value = project.getProperty('sencha.cmd.v6');
									if (value !== null && value.trim() !== '') {
										project.setProperty('sencha.cmd', value);
									}
								]]>
								</script>
								<script language="javascript">
								<![CDATA[
									var value = project.getProperty('webtop.service.package') || '';
									value = value.replaceAll('\\.', '/');
									project.setProperty('webtop.service.package.path', value);
								]]>
								</script>
								<script language="javascript">
								<![CDATA[
									var value = project.getProperty('webtop.service.restApi.oas') || '';
									value = value.replaceAll('openapi-', '');
									value = value.replaceAll('.json', '');
									value = value.replaceAll('.yaml', '');
									project.setProperty('webtop.service.restApi.oas.context', value);
								]]>
								</script>
								<script language="javascript">
								<![CDATA[
									var scc = [],
										swcc = [],
										wksp = project.getProperty('sencha.workspace') || '';
									
									scc.push(wksp + '/ext/packages/core/src');
									scc.push(wksp + '/ext/packages/core/overrides');
									scc.push(wksp + '/ext/classic/classic/src');
									scc.push(wksp + '/ext/classic/classic/overrides');
									scc.push(wksp + '/ext/packages/ux/src');
									scc.push(wksp + '/ext/packages/ux/overrides');
									scc.push(wksp + '/ext/packages/ux/classic/src');
									scc.push(wksp + '/ext/packages/ux/classic/overrides');
									scc.push(wksp + '/ext/packages/charts/src');
									scc.push(wksp + '/ext/packages/charts/overrides');
									scc.push(wksp + '/ext/packages/charts/classic/src');
									scc.push(wksp + '/ext/packages/charts/classic/overrides');
									project.setProperty('sencha.compile.classpath', scc.join(','));
									
									swcc.push(wksp + '/packages/local/sonicle-extensions/src');
									project.setProperty('sencha.compile.wt.classpath', swcc.join(','));
								]]>
								</script>
								<condition property="isWindows">
									<os family="windows" />
								</condition>
								<if>
									<equals arg1="${isWindows}" arg2="true" />
									<then>
										<property name="sencha.cmd.exec" value="sencha.exe" />
									</then>
									<else>
										<property name="sencha.cmd.exec" value="sencha" />
									</else>
								</if>
								<echo>Using:</echo>
								<echo>sencha.properties.target: ${sencha.properties.target}</echo>
								<echo>sencha.cmd: ${sencha.cmd}</echo>
								<echo>sencha.workspace: ${sencha.workspace}</echo>
								<echo>sencha.cmd.exec: ${sencha.cmd.exec}</echo>
								<echo>sencha.cmd.exec.args: ${sencha.cmd.exec.args}</echo>
								<!--
								<echo>webtop.service.package.path: ${webtop.service.package.path}</echo>
								<echo>webtop.service.restApi.oas.context: ${webtop.service.restApi.oas.context}</echo>
								-->
							</target>
						</configuration>
					</execution>
					<execution>
						<id>replace-manifest-variables</id>
						<phase>none</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<tstamp>
									<format property="webtop.service.buildDate" pattern="yyyy-MM-dd" />
								</tstamp>
								<echo>Updating manifest variables</echo>
								<replace file="${project.build.outputDirectory}/META-INF/webtop-services.xml">
									<replacefilter token="@@webtop.service.version@@" value="${project.version}" />
									<replacefilter token="@@webtop.service.buildDate@@" value="${webtop.service.buildDate}" />
									<replacefilter token="@@webtop.service.buildType@@" value="${webtop.service.buildType}" />
								</replace>
							</target>	
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<artifactId>ant</artifactId>
								<groupId>ant</groupId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>com.sonicle.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>${minify-maven-plugin.version}</version>
				<configuration>
					<charset>UTF-8</charset>
					<webappSourceDir>${project.basedir}/src/main</webappSourceDir>
					<webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
			</plugin>
			<!-- v2 version -->
			<!--
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-oas-classes</id>
						<phase>none</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/${webtop.service.package.path}/${webtop.service.restApi.oas}</inputSpec>
							<language>jaxrs-spec</language>
							<templateDirectory>.swagger-codegen/templates/jaxrs-spec</templateDirectory>
							<output>.</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<generateSupportingFiles>false</generateSupportingFiles>
							<apiPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.api</apiPackage>
							<modelPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.model</modelPackage>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/swagger</sourceFolder>
								<apiPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.api</apiPackage>
								<modelPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<!-- v3 version -->
			<!--
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-oas-classes</id>
						<phase>none</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/${webtop.service.package.path}/${webtop.service.restApi.oas}</inputSpec>
							<language>jaxrs-spec</language>
							<templateDirectory>.swagger-codegen/templates/jaxrs-spec</templateDirectory>
							<output>.</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<generateSupportingFiles>false</generateSupportingFiles>
							<apiPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.api</apiPackage>
							<modelPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.model</modelPackage>
							<configOptions>
								//<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/swagger</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-oas-classes</id>
						<phase>none</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/${webtop.service.package.path}/${webtop.service.restApi.oas}</inputSpec>
							<generatorName>jaxrs-spec</generatorName>
							<templateDirectory>.openapi-generator/templates/jaxrs-spec</templateDirectory>
							<output>.</output>
							<apiPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.api</apiPackage>
							<modelPackage>${webtop.service.package}.swagger.${webtop.service.restApi.oas.context}.model</modelPackage>
							<modelNamePrefix>Api</modelNamePrefix>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<sourceFolder>src/gen/swagger</sourceFolder>
								<!--<dateLibrary>java8</dateLibrary>-->
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<executions>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
